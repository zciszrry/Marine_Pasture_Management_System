# Generated by Django 3.2.20 on 2024-06-29 08:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32)),
                ('password', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45, null=True)),
                ('category', models.CharField(max_length=45, null=True)),
                ('type', models.CharField(max_length=45, null=True)),
                ('memory', models.IntegerField(null=True)),
                ('run_time', models.DateTimeField(null=True)),
                ('next_repair_time', models.DateField(null=True)),
                ('warranty_time', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=45, null=True)),
                ('weight', models.FloatField(null=True)),
                ('length1', models.FloatField(null=True)),
                ('length2', models.FloatField(null=True)),
                ('length3', models.FloatField(null=True)),
                ('height', models.FloatField(null=True)),
                ('width', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FishGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=45, null=True)),
                ('number', models.CharField(max_length=45, null=True)),
                ('time', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HydrologicInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitoring_time', models.DateField(blank=True, null=True)),
                ('water_quality_category', models.CharField(blank=True, max_length=20, null=True)),
                ('water_temperature', models.FloatField(blank=True, null=True)),
                ('pH', models.FloatField(blank=True, null=True)),
                ('dissolved_oxygen', models.FloatField(blank=True, null=True)),
                ('conductivity', models.FloatField(blank=True, null=True)),
                ('turbidity', models.FloatField(blank=True, null=True)),
                ('permanganate_index', models.FloatField(blank=True, null=True)),
                ('ammonia_nitrogen', models.FloatField(blank=True, null=True)),
                ('total_phosphorus', models.FloatField(blank=True, null=True)),
                ('total_nitrogen', models.FloatField(blank=True, null=True)),
                ('station_condition', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Hydrologic Information',
                'verbose_name_plural': 'Hydrologic Information',
            },
        ),
        migrations.CreateModel(
            name='NetCage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('width', models.FloatField(null=True)),
                ('length', models.FloatField(null=True)),
                ('depth', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('latitude', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45, null=True)),
                ('position', models.CharField(max_length=45, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=5, null=True)),
                ('age', models.IntegerField(null=True)),
                ('phone_number', models.IntegerField(null=True)),
                ('state', models.CharField(choices=[('N', '正常'), ('A', '异常')], max_length=45, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('sensor_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=20)),
                ('battery_level', models.PositiveIntegerField()),
                ('next_repair_time', models.DateTimeField()),
                ('warranty_time', models.DateField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.device')),
            ],
        ),
    ]
